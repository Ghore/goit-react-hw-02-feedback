{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\n\nclass Toggle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.show = () => this.setState({\n      isOpen: true\n    });\n\n    this.hide = () => this.setState({\n      isOpen: false\n    });\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Show\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Hide\"), isOpen && children);\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","Toggle","Component","state","isOpen","show","setState","hide","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBC,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADqB;;AAAA,SAG7BC,IAH6B,GAGtB,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CAHgB;;AAAA,SAK7BG,IAL6B,GAKtB,MAAM,KAAKD,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CALgB;AAAA;;AAO7BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,wBACE,uDACE;AAAQ,MAAA,OAAO,EAAE,KAAKL,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGH,MAAM,IAAIK,QAHb,CADF;AAOD;;AAlB4B","sourcesContent":["import React from 'react';\n\nclass Toggle extends Component {\n  state = { isOpen: false };\n\n  show = () => this.setState({ isOpen: true });\n\n  hide = () => this.setState({ isOpen: false });\n\n  render() {\n    const { isOpen } = this.state;\n    const { children } = this.props;\n\n    return (\n      <>\n        <button onClick={this.show}>Show</button>\n        <button onClick={this.hide}>Hide</button>\n        {isOpen && children}\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}