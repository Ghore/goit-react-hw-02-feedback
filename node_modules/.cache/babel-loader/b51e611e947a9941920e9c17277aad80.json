{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return this.state.good / this.countTotalFeedback * 100;\n    };\n\n    this.handleClick = e => {\n      const {\n        name\n      } = e.target;\n      this.setState(state => ({\n        [name]: state[name] + 1\n      }));\n      this.countTotalFeedback();\n    };\n  }\n\n  render() {\n    const PositiveFeedbackPercentage = Number(this.countPositiveFeedbackPercentage().toFixed(0));\n    const total = this.countTotalFeedback();\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Please leave you feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"good\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"neutral\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"bad\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"bad\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Good:\", good), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Neutral:\", neutral), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Bad:\", bad), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Total:\", total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Positive feedback:\", PositiveFeedbackPercentage, \"%\"));\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","Component","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","handleClick","e","name","target","setState","render","PositiveFeedbackPercentage","Number","toFixed","total"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADiC;;AAAA,SAMzCC,kBANyC,GAMpB,MAAM;AACzB,YAAM;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACD,KATwC;;AAAA,SAWxCE,+BAXwC,GAWN,MAAM;AAEvC,aAAQ,KAAKL,KAAL,CAAWC,IAAX,GAAkB,KAAKG,kBAAxB,GAA8C,GAArD;AACD,KAdwC;;AAAA,SAezCE,WAfyC,GAe1BC,CAAD,IAAO;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,CAAC,CAACE,MAAnB;AACA,WAAKC,QAAL,CAAeV,KAAD,KAAY;AAAE,SAACQ,IAAD,GAAQR,KAAK,CAACQ,IAAD,CAAL,GAAc;AAAxB,OAAZ,CAAd;AACA,WAAKJ,kBAAL;AACD,KAnBwC;AAAA;;AAoBzCO,EAAAA,MAAM,GAAG;AACP,UAAMC,0BAA0B,GAAGC,MAAM,CAAE,KAAKR,+BAAL,GAAuCS,OAAvC,CAA+C,CAA/C,CAAF,CAAzC;AACA,UAAMC,KAAK,GAAG,KAAKX,kBAAL,EAAd;AACA,UAAM;AAAEH,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,OAAO,EAAE,KAAKM,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAE,KAAKA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,eAkBE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,OAAO,EAAE,KAAKA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASL,IAAT,CA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYC,OAAZ,CA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQC,GAAR,CA5BF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUY,KAAV,CA7BF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBH,0BAAtB,MA9BF,CADF;AAkCD;;AA1DwC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n   countPositiveFeedbackPercentage = () => {\n    \n    return (this.state.good / this.countTotalFeedback) * 100;\n  };\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((state) => ({ [name]: state[name] + 1 }));\n    this.countTotalFeedback();\n  };\n  render() {\n    const PositiveFeedbackPercentage = Number( this.countPositiveFeedbackPercentage().toFixed(0),)\n    const total = this.countTotalFeedback();\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"container\">\n        <h2>Please leave you feedback</h2>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"good\"\n          onClick={this.handleClick}\n        >\n          good\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"neutral\"\n          onClick={this.handleClick}\n        >\n          neutral\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"bad\"\n          onClick={this.handleClick}\n        >\n          bad\n        </button>\n        <p>Good:{good}</p>\n        <p>Neutral:{neutral}</p>\n        <p>Bad:{bad}</p>\n        <p>Total:{total}</p>\n        <p>Positive feedback:{PositiveFeedbackPercentage}%</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}