{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Statistics from \"./Statistics\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      if (this.state.good) {\n        return Math.round(this.state.good * 100 / this.countTotalFeedback());\n      } else {\n        return 0;\n      }\n    };\n\n    this.handleClick = e => {\n      const {\n        name\n      } = e.target;\n      this.setState(state => ({\n        [name]: state[name] + 1\n      }));\n      this.countTotalFeedback();\n    };\n  }\n\n  render() {\n    // const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage().toFixed(\n    //   0\n    // );\n    // const total = this.countTotalFeedback();\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n      title: \"Please leave feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FeedbackOptions, {\n      options: this.state,\n      onLeaveFeedback: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Section, {\n      title: \"Statistics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, this.countTotalFeedback() ? /*#__PURE__*/React.createElement(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: this.countTotalFeedback(),\n      positivePercentage: this.countPositiveFeedbackPercentage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Notification, {\n      message: \"No feedback given\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","Component","Statistics","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleClick","e","name","target","setState","render","changeHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADiC;;AAAA,SAMzCC,kBANyC,GAMpB,MAAM;AACzB,YAAM;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACD,KATwC;;AAAA,SAWzCE,+BAXyC,GAWP,MAAM;AACtC,UAAI,KAAKL,KAAL,CAAWC,IAAf,EAAqB;AACnB,eAAOK,IAAI,CAACC,KAAL,CAAY,KAAKP,KAAL,CAAWC,IAAX,GAAkB,GAAnB,GAA0B,KAAKG,kBAAL,EAArC,CAAP;AACD,OAFD,MAEO;AACL,eAAO,CAAP;AACD;AACF,KAjBwC;;AAAA,SAkBzCI,WAlByC,GAkB1BC,CAAD,IAAO;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,CAAC,CAACE,MAAnB;AACA,WAAKC,QAAL,CAAeZ,KAAD,KAAY;AAAE,SAACU,IAAD,GAAQV,KAAK,CAACU,IAAD,CAAL,GAAc;AAAxB,OAAZ,CAAd;AACA,WAAKN,kBAAL;AACD,KAtBwC;AAAA;;AAuBzCS,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AAEA,wBACE,uDACA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAE,KAAKA,KADhB;AAEE,MAAA,eAAe,EAAE,KAAKc,aAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,eAOA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,kBAAL,kBACC,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,GAAG,EAAEC,GAHP;AAIE,MAAA,KAAK,EAAE,KAAKC,kBAAL,EAJT;AAKE,MAAA,kBAAkB,EAAE,KAAKC,+BAAL,EALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBASC,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAPA,CADF;AAuBD;;AArDwC","sourcesContent":["import React, { Component } from \"react\";\nimport Statistics from \"./Statistics\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.state.good) {\n      return Math.round((this.state.good * 100) / this.countTotalFeedback());\n    } else {\n      return 0;\n    }\n  };\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((state) => ({ [name]: state[name] + 1 }));\n    this.countTotalFeedback();\n  };\n  render() {\n    // const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage().toFixed(\n    //   0\n    // );\n    // const total = this.countTotalFeedback();\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.changeHandler}\n        ></FeedbackOptions>\n      </Section>\n      <Section title=\"Statistics\">\n        {this.countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          ></Statistics>\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Section>\n    </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}