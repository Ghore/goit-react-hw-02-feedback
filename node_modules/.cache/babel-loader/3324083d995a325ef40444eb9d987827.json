{"ast":null,"code":"var _jsxFileName = \"D:\\\\GO\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n  }\n\n  // countTotalFeedback = () => {\n  //   const { good, neutral, bad } = this.state;\n  //   return good + neutral + bad;\n  // };\n  // countPositiveFeedbackPercentage = () => {\n  //   if (this.state.good) {\n  //     return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  //   } else {\n  //     return 0;\n  //   }\n  // };\n  // handleClick = (e) => {\n  //   const { name } = e.target;\n  //   this.setState((state) => ({ [name]: state[name] + 1 }));\n  //   this.countTotalFeedback();\n  // };\n  render() {\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage().toFixed(0);\n    const total = this.countTotalFeedback();\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Please leave you feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"good\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"neutral\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      name: \"bad\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"bad\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Good:\", good), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Neutral:\", neutral), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Bad:\", bad), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Total:\", total), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Positive feedback:\", positiveFeedbackPercentage, \"%\"));\n  }\n\n}","map":{"version":3,"sources":["D:/GO/goit-react-hw-02-feedback/src/components/App.js"],"names":["React","Component","App","state","good","neutral","bad","render","positiveFeedbackPercentage","countPositiveFeedbackPercentage","toFixed","total","countTotalFeedback","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADiC;AAAA;;AAMzC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACP,UAAMC,0BAA0B,GAAG,KAAKC,+BAAL,GAAuCC,OAAvC,CACjC,CADiC,CAAnC;AAGA,UAAMC,KAAK,GAAG,KAAKC,kBAAL,EAAd;AACA,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,OAAO,EAAE,KAAKU,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,OAAO,EAAE,KAAKA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,eAkBE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,OAAO,EAAE,KAAKA,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAST,IAAT,CA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYC,OAAZ,CA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQC,GAAR,CA5BF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUK,KAAV,CA7BF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBH,0BAAtB,MA9BF,CADF;AAkCD;;AA/DwC","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  // countTotalFeedback = () => {\n  //   const { good, neutral, bad } = this.state;\n  //   return good + neutral + bad;\n  // };\n\n  // countPositiveFeedbackPercentage = () => {\n  //   if (this.state.good) {\n  //     return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  //   } else {\n  //     return 0;\n  //   }\n  // };\n  // handleClick = (e) => {\n  //   const { name } = e.target;\n  //   this.setState((state) => ({ [name]: state[name] + 1 }));\n  //   this.countTotalFeedback();\n  // };\n  render() {\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage().toFixed(\n      0\n    );\n    const total = this.countTotalFeedback();\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"container\">\n        <h2>Please leave you feedback</h2>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"good\"\n          onClick={this.handleClick}\n        >\n          good\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"neutral\"\n          onClick={this.handleClick}\n        >\n          neutral\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          name=\"bad\"\n          onClick={this.handleClick}\n        >\n          bad\n        </button>\n        <p>Good:{good}</p>\n        <p>Neutral:{neutral}</p>\n        <p>Bad:{bad}</p>\n        <p>Total:{total}</p>\n        <p>Positive feedback:{positiveFeedbackPercentage}%</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}