{"version":3,"sources":["components/Section.js","components/Notification.js","components/FeedbackOptions.js","components/Statistics.js","components/App.js","index.js"],"names":["Section","title","children","Notification","message","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","name","onClick","className","Statistics","good","neutral","bad","total","positivePercentage","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleClick","e","target","setState","this","Component","ReactDOM","render","document","querySelector"],"mappings":"yKAYeA,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICCUC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICsB3BC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,4BACEC,KAAK,SACLC,KAAMF,EACNA,IAAKA,EACLG,QAASP,EACTQ,UAAU,aAETJ,QCUIK,EArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,wBAAIN,UAAU,kBACZ,qCAAWE,GACX,wCAAcC,GACd,mCAASC,GACT,sCAAYC,GACZ,iDAEGC,EAFH,OCFeC,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,mBAAqB,WAAO,IAAD,EACM,EAAKD,MACpC,OAFyB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAIzBM,gCAAkC,WAChC,OAAI,EAAKF,MAAMN,KACNS,KAAKC,MAAyB,IAAlB,EAAKJ,MAAMN,KAAc,EAAKO,sBAE1C,G,EAGXI,YAAc,SAACC,GAAO,IACZhB,EAASgB,EAAEC,OAAXjB,KACR,EAAKkB,UAAS,SAACR,GAAD,sBAAeV,EAAOU,EAAMV,GAAQ,MAClD,EAAKW,sB,uDAEG,IAAD,EACwBQ,KAAKT,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAASlB,MAAM,yBACb,kBAAC,EAAD,CACEK,QAAS0B,KAAKT,MACdhB,gBAAiByB,KAAKJ,eAG1B,kBAAC,EAAD,CAAS3B,MAAM,cACZ+B,KAAKR,qBACJ,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKR,qBACZH,mBAAoBW,KAAKP,oCAG3B,kBAAC,EAAD,CAAcrB,QAAQ,4B,GA5CD6B,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.dcdcc68e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((key) => (\r\n        <button\r\n          type=\"button\"\r\n          name={key}\r\n          key={key}\r\n          onClick={onLeaveFeedback}\r\n          className=\"optionBtn\"\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className=\"statisticsList\">\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad:{bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>\r\n        Positive feedback:\r\n        {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\n\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.state.good) {\n      return Math.round((this.state.good * 100) / this.countTotalFeedback());\n    } else {\n      return 0;\n    }\n  };\n  handleClick = (e) => {\n    const { name } = e.target;\n    this.setState((state) => ({ [name]: state[name] + 1 }));\n    this.countTotalFeedback();\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}